@using MudBlazor
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Color="Color.Dark" Elevation="1">
        <!-- Conditionally show the menu button if authenticated -->
        @if (isAuthenticated)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        }
        <MudText Typo="Typo.h5" Class="ml-3">Tech Solutions</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>

    <MudMainContent>
        <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                <FocusOnNavigate RouteData="@routeData" Selector="h1" />
            </Found>
            <NotFound>
                <PageTitle>Not found</PageTitle>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p role="alert">Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = false; // Default to false, will be updated based on authentication
    bool isAuthenticated = false; // Default to false, will be updated based on authentication

  
    protected override async Task OnInitializedAsync()
    {
        var token = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "token");
        isAuthenticated = !string.IsNullOrEmpty(token);
        
        // If authenticated, open the drawer
        if (isAuthenticated)
        {
            _drawerOpen = true;
        }
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
